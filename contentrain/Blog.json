[{"createdAt":1640879314588,"cover":"1640879327289_cover.jpg","content":"<p><strong>Merhaba,</strong></p><p>Bu yazıyı temel insan ihtiyaçlarından olduğunu düşündüğüm bilgiyi aktarma ihtiyacımdan dolayı ve aynı zamanda belki birilerine faydası dokunur diye yazıyorum. Bugün <strong>KOÜ Elektrik Mühendisliği</strong> bölümüne yeni başlamış olan birinci sınıf arkadaşların WhatsApp gruplarına girdiğimde mevcut dönem derslerinden olan <strong>“Bilgisayar Programlamaya Giriş”</strong> hakkında fikir alışverişi yaptıklarını gördüm ve ben de bilgim dahilinde birkaç şey paylaşmak istedim.</p>","title":"Yazılıma başlamayı düşünenler ve henüz başlamışlar için tavsiyeler","ID":"bf38a3b1-40cb-4b62-9c18-901a32ff0ac6","tags":[],"excerpt":"Merhaba, Bu yazıyı temel insan ihtiyaçlarından olduğunu düşündüğüm bilgiyi aktarma ihtiyacımdan dolayı ve aynı zamanda belki birilerine faydası dokunur diye yazıyorum.","updatedAt":1640879329669},{"createdAt":1640879937098,"cover":"1640879887426_React-Redux.jpg","content":"<h1>Getting started</h1><h2>Install<a href=\"https://redux-saga.js.org/docs/introduction/GettingStarted#install\" rel=\"noopener noreferrer\" target=\"_blank\">​</a></h2><pre class=\"ql-syntax\" spellcheck=\"false\">$ npm install redux-saga\n</pre><p><br></p><p>or</p><pre class=\"ql-syntax\" spellcheck=\"false\">$ yarn add redux-saga\n</pre><p><br></p><p>Alternatively, you may use the provided UMD builds directly in the <code>&lt;script&gt;</code> tag of an HTML page. See <a href=\"https://redux-saga.js.org/docs/introduction/GettingStarted#using-umd-build-in-the-browser\" rel=\"noopener noreferrer\" target=\"_blank\">this section</a>.</p><h2>Usage Example<a href=\"https://redux-saga.js.org/docs/introduction/GettingStarted#usage-example\" rel=\"noopener noreferrer\" target=\"_blank\">​</a></h2><p>Suppose we have a UI to fetch some user data from a remote server when a button is clicked. (For brevity, we'll just show the action triggering code.)</p><pre class=\"ql-syntax\" spellcheck=\"false\">class UserComponent extends React.Component {\n  ...\n  onSomeButtonClicked() {\n    const { userId, dispatch } = this.props\n    dispatch({type: 'USER_FETCH_REQUESTED', payload: {userId}})\n  }\n  ...\n}\n</pre><p>The Component dispatches a plain Object action to the Store. We'll create a Saga that watches for all <code>USER_FETCH_REQUESTED</code> actions and triggers an API call to fetch the user data.</p><h4><code>sagas.js</code><a href=\"https://redux-saga.js.org/docs/introduction/GettingStarted#sagasjs\" rel=\"noopener noreferrer\" target=\"_blank\">​</a></h4><pre class=\"ql-syntax\" spellcheck=\"false\">import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport Api from '...'\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* fetchUser(action) {\n   try {\n      const user = yield call(Api.fetchUser, action.payload.userId);\n      yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put({type: \"USER_FETCH_FAILED\", message: e.message});\n   }\n}\n\n/*\n  Starts fetchUser on each dispatched `USER_FETCH_REQUESTED` action.\n  Allows concurrent fetches of user.\n*/\nfunction* mySaga() {\n  yield takeEvery(\"USER_FETCH_REQUESTED\", fetchUser);\n}\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga() {\n  yield takeLatest(\"USER_FETCH_REQUESTED\", fetchUser);\n}\n\nexport default mySaga;\n</pre><p>To run our Saga, we'll have to connect it to the Redux Store using the <code>redux-saga</code> middleware.</p><h4><code>main.js</code><a href=\"https://redux-saga.js.org/docs/introduction/GettingStarted#mainjs\" rel=\"noopener noreferrer\" target=\"_blank\">​</a></h4><pre class=\"ql-syntax\" spellcheck=\"false\">import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport reducer from './reducers'\nimport mySaga from './sagas'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n// mount it on the Store\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n)\n\n// then run the saga\nsagaMiddleware.run(mySaga)\n\n// render the application\n</pre><h2>Using UMD build in the browser<a href=\"https://redux-saga.js.org/docs/introduction/GettingStarted#using-umd-build-in-the-browser\" rel=\"noopener noreferrer\" target=\"_blank\">​</a></h2><p>There is also a <strong>UMD</strong> build of <code>redux-saga</code> available in the <code>dist/</code> folder. When using the umd build <code>redux-saga</code> is available as <code>ReduxSaga</code> in the window object. This enables you to create Saga middleware without using ES6 <code>import</code> syntax like this:</p><pre class=\"ql-syntax\" spellcheck=\"false\">var sagaMiddleware = ReduxSaga.default()\n</pre><p><br></p><p>The UMD version is useful if you don't use Webpack or Browserify. You can access it directly from <a href=\"https://unpkg.com/\" rel=\"noopener noreferrer\" target=\"_blank\">unpkg</a>.</p><p>The following builds are available:</p><ul><li><a href=\"https://unpkg.com/redux-saga/dist/redux-saga.umd.js\" rel=\"noopener noreferrer\" target=\"_blank\">https://unpkg.com/redux-saga/dist/redux-saga.umd.js</a></li><li><a href=\"https://unpkg.com/redux-saga/dist/redux-saga.umd.min.js\" rel=\"noopener noreferrer\" target=\"_blank\">https://unpkg.com/redux-saga/dist/redux-saga.umd.min.js</a></li></ul><p><strong>Important!</strong></p><p> If the browser you are targeting doesn't support <em>ES2015 generators</em>, you must transpile them (i.e., with <a href=\"https://github.com/facebook/regenerator/tree/master/packages/regenerator-transform\" rel=\"noopener noreferrer\" target=\"_blank\">babel plugin</a>) and provide a valid runtime, such as <a href=\"https://unpkg.com/regenerator-runtime/runtime.js\" rel=\"noopener noreferrer\" target=\"_blank\">the one here</a>. The runtime must be imported before <strong>redux-saga</strong>:</p><pre class=\"ql-syntax\" spellcheck=\"false\">import 'regenerator-runtime/runtime'\n// then\nimport sagaMiddleware from 'redux-saga'\n</pre><p><br></p>","title":"What is Redux Saga?","ID":"3f64d0f4-d22a-4a4f-b6eb-799c398f2215","tags":[],"excerpt":"redux-saga is a library that aims to make application side effects (i.e. asynchronous things like data fetching and impure things like accessing the browser cache) easier to manage, more efficient to execute, easy to test, and better at handling failures."}]